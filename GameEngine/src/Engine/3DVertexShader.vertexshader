#version 330 core

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 aNormal;
layout(location = 2) in vec2 aTexCoord;

out vec2 TexCoord;
out vec3 vNormal;
out vec3 FragPos;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj;

void main()
{
	TexCoord = aTexCoord;
	mat4 mvp = proj * view * model;
	gl_Position = mvp * vec4(position, 1.0);

	mat3 normalMatrix = mat3(model);
	normalMatrix = inverse(normalMatrix);
	normalMatrix = transpose(normalMatrix);
	vNormal = normalize(aNormal * normalMatrix);

	FragPos = vec3(mvp * vec4(position, 1.0));
}